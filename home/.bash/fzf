# Key bindings
# ------------
__fzf_select__() {
  local cmd="${FZF_CTRL_T_COMMAND:-"command find -L . -mindepth 1 \\( -path '*/\\.*' -o -fstype 'sysfs' -o -fstype 'devfs' -o -fstype 'devtmpfs' -o -fstype 'proc' \\) -prune \
    -o -type f -print \
    -o -type d -print \
    -o -type l -print 2> /dev/null | cut -b3-"}"
  eval "$cmd" | FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} --reverse $FZF_DEFAULT_OPTS $FZF_CTRL_T_OPTS" fzf -m "$@" | while read -r item; do
    printf '%q ' "$item"
  done
  echo
}

if [[ $- =~ i ]]; then

	__fzf_use_tmux__() {
	  [ -n "$TMUX_PANE" ] && [ "${FZF_TMUX:-0}" != 0 ] && [ ${LINES:-40} -gt 15 ]
	}

	__fzfcmd() {
	  __fzf_use_tmux__ &&
		echo "fzf-tmux -d${FZF_TMUX_HEIGHT:-40%}" || echo "fzf"
	}

	__fzf_select_tmux__() {
	  local height
	  height=${FZF_TMUX_HEIGHT:-40%}
	  if [[ $height =~ %$ ]]; then
		height="-p ${height%\%}"
	  else
		height="-l $height"
	  fi

	  tmux split-window $height "cd $(printf %q "$PWD"); FZF_DEFAULT_OPTS=$(printf %q "$FZF_DEFAULT_OPTS") PATH=$(printf %q "$PATH") FZF_CTRL_T_COMMAND=$(printf %q "$FZF_CTRL_T_COMMAND") FZF_CTRL_T_OPTS=$(printf %q "$FZF_CTRL_T_OPTS") bash -c 'source \"${BASH_SOURCE[0]}\"; RESULT=\"\$(__fzf_select__ --no-height)\"; tmux setb -b fzf \"\$RESULT\" \\; pasteb -b fzf -t $TMUX_PANE \\; deleteb -b fzf || tmux send-keys -t $TMUX_PANE \"\$RESULT\"'"
	}

	fzf-file-widget() {
	  if __fzf_use_tmux__; then
		__fzf_select_tmux__
	  else
		local selected="$(__fzf_select__)"
		READLINE_LINE="${READLINE_LINE:0:$READLINE_POINT}$selected${READLINE_LINE:$READLINE_POINT}"
		READLINE_POINT=$(( READLINE_POINT + ${#selected} ))
	  fi
	}

	__fzf_cd__() {
	  local cmd dir
	  cmd="${FZF_ALT_C_COMMAND:-"command find -L . -mindepth 1 \\( -path '*/\\.*' -o -fstype 'sysfs' -o -fstype 'devfs' -o -fstype 'devtmpfs' -o -fstype 'proc' \\) -prune \
		-o -type d -print 2> /dev/null | cut -b3-"}"
	  dir=$(eval "$cmd" | FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} --reverse $FZF_DEFAULT_OPTS $FZF_ALT_C_OPTS" $(__fzfcmd) +m) && printf 'cd %q' "$dir"
	}

	__fzf_history__() (
	  local line
	  shopt -u nocaseglob nocasematch
	  line=$(
		HISTTIMEFORMAT= history |
		FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} $FZF_DEFAULT_OPTS --tac --sync -n2..,.. --tiebreak=index --bind=ctrl-r:toggle-sort $FZF_CTRL_R_OPTS +m" $(__fzfcmd) |
		command grep '^ *[0-9]') &&
		if [[ $- =~ H ]]; then
		  sed 's/^ *\([0-9]*\)\** .*/!\1/' <<< "$line"
		else
		  sed 's/^ *\([0-9]*\)\** *//' <<< "$line"
		fi
	)

	# ------------------------------------
	bind '"\C-x\C-x":  vi-movement-mode'     # use another key to enter vi-movement-mode (avoids delay)
    bind '"\C-x\C-e":  shell-expand-line'
    bind '"\C-x\C-r":  redraw-current-line'
    bind '"\C-x^":     history-expand-line'

    bind -x '"\eo":    fzf-file-widget'
    bind -m vi-command '"\eo": "i\eo'

	bind '"\ep":       "\C-x\C-xddi`__fzf_history__`\C-x\C-e\C-x\C-r\C-x^\C-x\C-x$a"'
	bind -m vi-command '"\ep": "i\ep"'

	bind '"\ep":       "\C-x\C-xddi`__fzf_history__`\C-x\C-e\C-x\C-r\C-x^\C-x\C-x$a"'
	bind -m vi-command '"\ep": "i\ep"'

    bind '"\ec": "\C-x\C-xddi`__fzf_cd__`\C-x\C-e\C-x\C-r\C-m"'
    bind -m vi-command '"\ec": "ddi`__fzf_cd__`\C-x\C-e\C-x\C-r\C-m"'

    export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
    export FZF_DEFAULT_OPTS='--border --inline-info --no-bold --color=light,bg+:231,fg+:232 --bind esc:abort,alt-j:down,alt-k:up,K:up,J:down,alt-p:toggle-preview --prompt=Â»\  '
    export FZF_CTRL_T_OPTS='--preview="head -$LINES {} 2> /dev/null" --preview-window=right:50%:hidden'
    export FZF_CTRL_R_OPTS=''
    export FZF_ALT_C_OPTS=''
	export FZF_TMUX=0
fi

# :vim: set ft=bash:
