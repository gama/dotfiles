# use control-a as prefix
unbind-key C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# ----- server options -----
set-option -s terminal-overrides "*88col*:colors=88,*256col*:colors=256,xterm*:XT"
set-option -sa terminal-overrides ',*:Cs=\E]12;%p1%s\007'
set-option -sa terminal-overrides ',xterm*:Cr=\E]112\007'
set-option -sa terminal-overrides ',mlterm*:Cr=\E]12;\007'
set-option -sa terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
set-option -s default-terminal "screen-256color"

# ----- global options -----
set-option -g aggressive-resize on
set-option -g assume-paste-time 0
set-option -g base-index 1
set-option -g display-time 2000
set-option -g escape-time 0
set-option -g focus-events on
set-option -g history-limit 100000
set-option -g message-bg colour233
set-option -g message-fg colour254
set-option -g mode-style 'bg=colour230'
set-option -g pane-active-border-style 'fg=colour230,bg=colour230'
set-option -g pane-border-style 'fg=colour254,bg=colour254'
set-option -g renumber-windows on
set-option -g set-titles on
set-option -g set-titles-string '[#I.#P] #W'
set-option -g status on
set-option -g status-left ''
set-option -g status-right "#[fg=colour248,bg=colour250]#[fg=colour236,bg=colour248] %Y-%m-%d %H:%M:%S #[fg=colour236,bg=colour248,nobold,nounderscore,noitalics]#[fg=colour252,bg=colour236] #h "
set-option -g status-style 'fg=colour232,bg=colour250'
set-option -g update-environment -r
set-option -g visual-activity on
set-option -g window-active-style 'bg=colour230'
set-option -g window-status-current-format '#[fg=#{?window_zoomed_flag,colour25,default},bg=default] #I:#T #[fg=default,bg=default]'
set-option -g window-status-format ' #I:#T ' 
# set-option -g window-status-style 'fg=colour234,bg=colour250'
set-option -g window-status-style 'fg=colour234'
set-option -g window-style 'bg=colour254'
set-option -g window-status-separator ''
# set-option -g xterm-keys on

# ----- window options -----
set-option -g -w automatic-rename
set-option -g -w mode-keys vi
set-option -g -w monitor-activity off

# ----- keybindings -----

# smart pane switching with awareness of Vim splits.
# see: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o command= -t '#{pane_tty}' | \grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(fzf|g?view|g?n?vim?x?)(diff)?\s*'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R

bind-key -nr M-:       command-prompt
bind-key -nr M-r       new-window -c '#{pane_current_path}'
bind-key -nr M-\       split-window -h -c '#{pane_current_path}'
bind-key -nr M--       split-window -v -c '#{pane_current_path}'
bind-key -nr M-=       next-layout
bind-key -nr M-H       previous-window
bind-key -nr M-L       next-window
bind-key -nr M-{       previous-window
bind-key -nr M-}       next-window
bind-key -nr M-1       select-window -t :1
bind-key -nr M-2       select-window -t :2
bind-key -nr M-3       select-window -t :3
bind-key -nr M-4       select-window -t :4
bind-key -nr M-5       select-window -t :5
bind-key -nr M-6       select-window -t :6
bind-key -nr M-7       select-window -t :7
bind-key -nr M-8       select-window -t :8
bind-key -nr M-9       select-window -t :9
bind-key -nr M-0       select-window -l
bind-key -nr M-H       select-pane -L
bind-key -nr M-J       select-pane -D
bind-key -nr M-K       select-pane -U
bind-key -nr M-L       select-pane -R
bind-key -nr M-Up      resize-pane -U 3
bind-key -nr M-Down    resize-pane -D 3
bind-key -nr M-Left    resize-pane -L 5
bind-key -nr M-Right   resize-pane -R 5
bind-key -n  M-z       resize-pane -Z
bind-key -n  M-,       last-pane \; resize-pane -Z
bind-key -n  M-PPage   copy-mode -ue
bind-key -n  M-u       copy-mode -e
bind-key -n  M-i       paste-buffer
bind-key -n  M-C       clear-history
bind-key -n  M-d       display-message "${USER}@${HOST}:${PWD}   -   %b %d %Y, %H:%M"

bind-key -r -T copy-mode-vi K    send-keys -X scroll-up
bind-key -r -T copy-mode-vi J    send-keys -X scroll-down
bind-key -r -T copy-mode-vi P    send-keys -X page-up
bind-key -r -T copy-mode-vi N    send-keys -X page-down
bind-key -T copy-mode-vi v       send-keys -X begin-selection
bind-key -T copy-mode-vi y       send-keys -X copy-selection
bind-key -T copy-mode-vi V       send-keys -X rectangle-toggle

# ----- other -----
# use LC_ prefixed envvar to notify apps that tmux is active as variables
# with this prefix are automatically forward by the default sshd config
set-environment -g LC_TMUX 1

if-shell "grep -q light ~/.cache/termbg" "source ~/.tmux/lightbg.conf" "source ~/.tmux/darkbg.conf"

# ----- plugins -----
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-open'

set -g @yank_selection 'clipboard'
set -g @plugin 'tmux-plugins/tmux-yank'
# plugin manager
run '~/.tmux/plugins/tpm/tpm'
